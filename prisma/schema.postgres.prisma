generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// Same models as schema.prisma; Decimal maps to Prisma Decimal on PG
model FuelType {
  id     Int     @id @default(autoincrement())
  name   String  @unique
  tanks  Tank[]
  prices Price[]
}

model Tank {
  id           Int       @id @default(autoincrement())
  name         String
  capacityLit  Decimal
  fuelTypeId   Int
  fuelType     FuelType  @relation(fields: [fuelTypeId], references: [id])
  currentLevel Decimal    @default(0)
  sales        Sale[]
}

model Price {
  id         Int       @id @default(autoincrement())
  fuelTypeId Int
  fuelType   FuelType  @relation(fields: [fuelTypeId], references: [id])
  perLitre   Decimal
  active     Boolean   @default(true)
  createdAt  DateTime  @default(now())
}

enum PaymentMethod {
  CASH
  CARD
  ONLINE
  CREDIT
}

model Client {
  id          Int      @id @default(autoincrement())
  name        String
  phone       String?  @unique
  email       String?  @unique
  creditLimit Decimal  @default(0)
  balance     Decimal  @default(0)
  active      Boolean  @default(true)
  sales       Sale[]
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Sale {
  id            Int            @id @default(autoincrement())
  tankId        Int
  tank          Tank           @relation(fields: [tankId], references: [id])
  litres        Decimal
  pricePerLitre Decimal
  totalAmount   Decimal
  method        PaymentMethod
  clientId      Int?
  client        Client?        @relation(fields: [clientId], references: [id])
  note          String?
  createdAt     DateTime       @default(now())
}

model LedgerEntry {
  id        Int      @id @default(autoincrement())
  clientId  Int
  client    Client   @relation(fields: [clientId], references: [id])
  amount    Decimal
  memo      String?
  createdAt DateTime @default(now())
}

